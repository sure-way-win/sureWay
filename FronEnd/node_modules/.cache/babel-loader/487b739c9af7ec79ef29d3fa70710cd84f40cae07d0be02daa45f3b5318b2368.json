{"ast":null,"code":"var _jsxFileName = \"/Volumes/Docs/5thSem/ThirdYearProject/e19-3yp-School-Van-Tracking-System/code/webapplication/src/components/Bus.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { addNewBus } from \"../services/busService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Bus extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        licencePlate: \"\",\n        school: \"\",\n        sheets: 0\n      },\n      errors: {}\n    };\n    this.schema = {\n      licencePlate: Joi.string().required().label(\"Licence Plate\"),\n      school: Joi.string().required().label(\"School\")\n    };\n    this.doSubmit = async () => {\n      try {\n        const {\n          data\n        } = this.state;\n        await addNewBus({\n          licencePlateNumber: data.licencePlate,\n          school: data.school\n        });\n        // Optionally, you can redirect the user or perform other actions after the bus is successfully added.\n        console.log(\"Bus added successfully!\");\n      } catch (error) {\n        console.error(\"Error adding bus:\", error.message);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Bus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [this.renderInput(\"licencePlate\", \"Licence Plate\"), this.renderInput(\"school\", \"School\"), this.renderButton(\"Save\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Bus;","map":{"version":3,"names":["React","Joi","Form","addNewBus","jsxDEV","_jsxDEV","Bus","constructor","args","state","data","licencePlate","school","sheets","errors","schema","string","required","label","doSubmit","licencePlateNumber","console","log","error","message","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","renderInput","renderButton"],"sources":["/Volumes/Docs/5thSem/ThirdYearProject/e19-3yp-School-Van-Tracking-System/code/webapplication/src/components/Bus.jsx"],"sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { addNewBus } from \"../services/busService\";\n\nclass Bus extends Form {\n  state = {\n    data: {\n      licencePlate: \"\",\n      school: \"\",\n      sheets: 0,\n    },\n    errors: {},\n  };\n\n  schema = {\n    licencePlate: Joi.string().required().label(\"Licence Plate\"),\n    school: Joi.string().required().label(\"School\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await addNewBus({\n        licencePlateNumber: data.licencePlate,\n        school: data.school,\n      });\n      // Optionally, you can redirect the user or perform other actions after the bus is successfully added.\n      console.log(\"Bus added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding bus:\", error.message);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <h1>Add New Bus</h1>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"licencePlate\", \"Licence Plate\")}\n            {this.renderInput(\"school\", \"School\")}\n            {this.renderButton(\"Save\")}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bus;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,SAASJ,IAAI,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACrBC,KAAK,GAAG;MACNC,IAAI,EAAE;QACJC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;MACDC,MAAM,EAAE,CAAC;IACX,CAAC;IAAA,KAEDC,MAAM,GAAG;MACPJ,YAAY,EAAEV,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,eAAe,CAAC;MAC5DN,MAAM,EAAEX,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,QAAQ;IAChD,CAAC;IAAA,KAEDC,QAAQ,GAAG,YAAY;MACrB,IAAI;QACF,MAAM;UAAET;QAAK,CAAC,GAAG,IAAI,CAACD,KAAK;QAC3B,MAAMN,SAAS,CAAC;UACdiB,kBAAkB,EAAEV,IAAI,CAACC,YAAY;UACrCC,MAAM,EAAEF,IAAI,CAACE;QACf,CAAC,CAAC;QACF;QACAS,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACnD;IACF,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBtB,OAAA;QAAKqB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBtB,OAAA;UAAAsB,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB1B,OAAA;UAAM2B,QAAQ,EAAE,IAAI,CAACC,YAAa;UAAAN,QAAA,GAC/B,IAAI,CAACO,WAAW,CAAC,cAAc,EAAE,eAAe,CAAC,EACjD,IAAI,CAACA,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACpC,IAAI,CAACC,YAAY,CAAC,MAAM,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAezB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}