{"ast":null,"code":"'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error();\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n  // initialize result and counter\n  var block, charCode, idx = 0, map = chars;\n  // if the next str index does not exist:\n  //   change the mapping table to \"=\"\n  //   check if d has no fractional digits\n  str.charAt(idx | 0) || (map = '=', idx % 1);\n  // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\nmodule.exports = btoa;","map":{"version":3,"names":["chars","E","message","prototype","Error","code","name","btoa","input","str","String","output","block","charCode","idx","map","charAt","charCodeAt","module","exports"],"sources":["C:/Users/ASUS/Documents/GitHub/e19-3yp-School-Van-Tracking-System/code/webapplication/node_modules/axios/lib/helpers/btoa.js"],"sourcesContent":["'use strict';\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction E() {\r\n  this.message = 'String contains an invalid character';\r\n}\r\nE.prototype = new Error;\r\nE.prototype.code = 5;\r\nE.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new E();\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,IAAIA,KAAK,GAAG,mEAAmE;AAE/E,SAASC,CAACA,CAAA,EAAG;EACX,IAAI,CAACC,OAAO,GAAG,sCAAsC;AACvD;AACAD,CAAC,CAACE,SAAS,GAAG,IAAIC,KAAK,CAAD,CAAC;AACvBH,CAAC,CAACE,SAAS,CAACE,IAAI,GAAG,CAAC;AACpBJ,CAAC,CAACE,SAAS,CAACG,IAAI,GAAG,uBAAuB;AAE1C,SAASC,IAAIA,CAACC,KAAK,EAAE;EACnB,IAAIC,GAAG,GAAGC,MAAM,CAACF,KAAK,CAAC;EACvB,IAAIG,MAAM,GAAG,EAAE;EACf;EACE;EACA,IAAIC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGf,KAAK;EACzC;EACA;EACA;EACAS,GAAG,CAACO,MAAM,CAACF,GAAG,GAAG,CAAC,CAAC,KAAKC,GAAG,GAAG,GAAG,EAAED,GAAG,GAAG,CAAC,CAAC;EAC3C;EACAH,MAAM,IAAII,GAAG,CAACC,MAAM,CAAC,EAAE,GAAGJ,KAAK,IAAI,CAAC,GAAGE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EACnD;IACAD,QAAQ,GAAGJ,GAAG,CAACQ,UAAU,CAACH,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,IAAID,QAAQ,GAAG,IAAI,EAAE;MACnB,MAAM,IAAIZ,CAAC,CAAC,CAAC;IACf;IACAW,KAAK,GAAGA,KAAK,IAAI,CAAC,GAAGC,QAAQ;EAC/B;EACA,OAAOF,MAAM;AACf;AAEAO,MAAM,CAACC,OAAO,GAAGZ,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}